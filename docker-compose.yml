version: '3.8'

services:
  analytics-db:
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: analytics_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: S3cureP@ssw0rd!2025
    volumes:
      - analytics-data:/var/lib/postgresql/data

  analytics-service:
    build:
      context: ./backend/services/AnalyticsService
    ports:
      - "5202:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__AnalyticsDb: "Host=analytics-db;Port=5432;Database=analytics_db;Username=postgres;Password=S3cureP@ssw0rd!2025"
      Groq__ApiKey: "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"
      EvaluationService__BaseUrl: "http://evaluation-service:8080/"
      CourseManagementService__BaseUrl: "http://course-management-service:8080"
    depends_on:
      analytics-db:
        condition: service_healthy
  auth-db:
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: S3cureP@ssw0rd!2025
    volumes:
      - auth-data:/var/lib/postgresql/data

  auth-service:
    build:
      context: ./backend/services/AuthService
    ports:
      - "5244:8080"  # Auth service accessible on localhost:5244
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=auth-db;Port=5432;Database=auth_db;Username=postgres;Password=S3cureP@ssw0rd!2025"
    depends_on:
      auth-db:
       condition: service_healthy

  course-management-db:
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: gestion_formation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: S3cureP@ssw0rd!2025
    volumes:
      - course-data:/var/lib/postgresql/data


  course-management-service:
    build:
      context: ./backend/services/CourseManagementService
    ports:
      - "5201:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=course-management-db;Port=5432;Database=gestion_formation;Username=postgres;Password=S3cureP@ssw0rd!2025"
    depends_on:
      course-management-db:
        condition: service_healthy


  evaluation-db:
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: evaluation_formations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: S3cureP@ssw0rd!2025
    volumes:
      - evaluation-data:/var/lib/postgresql/data

  evaluation-service:
    build:
      context: ./backend/services/EvaluationService
    ports:
      - "5000:8080"  # Evaluation service accessible on localhost:5000
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__Postgres: "Host=evaluation-db;Port=5432;Database=evaluation_formations;Username=postgres;Password=S3cureP@ssw0rd!2025"
      Auth__Authority: "https://auth-ms"
      Auth__Audience: "ms_evaluations"
      RabbitMQ__Host: "rabbitmq.local"
      RabbitMQ__User: "guest"
      RabbitMQ__Pass: "guest"
      RabbitMQ__Exchange: "evaluations.exchange"
      AI__Endpoint: "https://api.groq.com/openai/v1/chat/completions"
      AI__ApiKey: "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"
      Other-Microservices-EndPoints__AuthService-EndPoint: "http://auth-service:8080"
      Other-Microservices-EndPoints__CoursesManagementService-EndPoint: "http://course-management-service:8080"
    depends_on:
      evaluation-db:
          condition: service_healthy

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_AUTH_URL: "http://auth-service:8080"
      NEXT_PUBLIC_API_COURSE_URL: "http://course-management-service:8080"
      NEXT_PUBLIC_API_EVALUATION_URL: "http://evaluation-service:8080"
      NEXT_PUBLIC_API_ANALYTICS_URL: "http://analytics-service:8080"


volumes:
  analytics-data:
  auth-data:
  course-data:
  evaluation-data:

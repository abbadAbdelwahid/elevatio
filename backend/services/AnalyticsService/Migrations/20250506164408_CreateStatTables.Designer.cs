// <auto-generated />
using System;
using AnalyticsService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnalyticsService.Migrations
{
    [DbContext(typeof(AnalyticsDbContext))]
    [Migration("20250506164408_CreateStatTables")]
    partial class CreateStatTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueEnseignant", b =>
                {
                    b.Property<int>("StatistiqueEnseignantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatistiqueEnseignantId"));

                    b.Property<double>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("ImprovementTrend")
                        .HasColumnType("double precision");

                    b.Property<double>("MedianRating")
                        .HasColumnType("double precision");

                    b.Property<double>("NegativeFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double>("NpsScore")
                        .HasColumnType("double precision");

                    b.Property<double>("ParticipationRate")
                        .HasColumnType("double precision");

                    b.Property<double>("PeerReviewScore")
                        .HasColumnType("double precision");

                    b.Property<double>("PositiveFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double>("ResponseTimeAvg")
                        .HasColumnType("double precision");

                    b.Property<double>("StdDevRating")
                        .HasColumnType("double precision");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("StatistiqueEnseignantId");

                    b.ToTable("StatistiquesEnseignants");
                });

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueFiliere", b =>
                {
                    b.Property<int>("StatistiqueFiliereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatistiqueFiliereId"));

                    b.Property<int>("ActionPlanCount")
                        .HasColumnType("integer");

                    b.Property<double>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FiliereId")
                        .HasColumnType("integer");

                    b.Property<double>("ImprovementTrend")
                        .HasColumnType("double precision");

                    b.Property<double>("MedianRating")
                        .HasColumnType("double precision");

                    b.Property<double>("NegativeFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double>("NpsScore")
                        .HasColumnType("double precision");

                    b.Property<double>("ParticipationRate")
                        .HasColumnType("double precision");

                    b.Property<double>("PositiveFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double>("SatisfactionRate")
                        .HasColumnType("double precision");

                    b.Property<double>("StdDevRating")
                        .HasColumnType("double precision");

                    b.HasKey("StatistiqueFiliereId");

                    b.ToTable("StatistiquesFilieres");
                });

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueModule", b =>
                {
                    b.Property<int>("StatistiqueModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatistiqueModuleId"));

                    b.Property<double>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<int>("CommentCount")
                        .HasColumnType("integer");

                    b.Property<double>("CompletionTimeAvg")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("DropoutRate")
                        .HasColumnType("double precision");

                    b.Property<double>("ImprovementTrend")
                        .HasColumnType("double precision");

                    b.Property<double>("MedianRating")
                        .HasColumnType("double precision");

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<double>("NegativeFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double>("NpsScore")
                        .HasColumnType("double precision");

                    b.Property<double>("ParticipationRate")
                        .HasColumnType("double precision");

                    b.Property<double>("PositiveFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double>("StdDevRating")
                        .HasColumnType("double precision");

                    b.HasKey("StatistiqueModuleId");

                    b.ToTable("StatistiquesModules");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using AnalyticsService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnalyticsService.Migrations
{
    [DbContext(typeof(AnalyticsDbContext))]
    [Migration("20250610200122_Initial45555555555555")]
    partial class Initial45555555555555
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnalyticsService.Models.RapportFQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FiliereId")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("RapportPdf")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("RapportFQs");
                });

            modelBuilder.Entity("AnalyticsService.Models.RapportMQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("RapportPdf")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("RapportMQs");
                });

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueEnseignant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageM")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MaxModuleRated")
                        .HasColumnType("text");

                    b.Property<double?>("MedianNotes")
                        .HasColumnType("double precision");

                    b.Property<string>("ModuleMaxPass")
                        .HasColumnType("text");

                    b.Property<string>("ModuleMinPass")
                        .HasColumnType("text");

                    b.Property<double?>("NoteMax")
                        .HasColumnType("double precision");

                    b.Property<double?>("NoteMin")
                        .HasColumnType("double precision");

                    b.Property<double?>("PassRate")
                        .HasColumnType("double precision");

                    b.Property<string>("Rapport")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("RapportPdf")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<double?>("StdEv")
                        .HasColumnType("double precision");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatistiquesEnseignants");
                });

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueEtudiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FiliereId")
                        .HasColumnType("integer");

                    b.Property<double?>("Median")
                        .HasColumnType("double precision");

                    b.Property<double>("NoteMax")
                        .HasColumnType("double precision");

                    b.Property<double>("NoteMin")
                        .HasColumnType("double precision");

                    b.Property<double>("NoteMoyenne")
                        .HasColumnType("double precision");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<double?>("PassRate")
                        .HasColumnType("double precision");

                    b.Property<byte[]>("RapportPdf")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatistiquesEtudiants");
                });

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueFiliere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageMoyenne")
                        .HasColumnType("double precision");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FiliereId")
                        .HasColumnType("integer");

                    b.Property<string>("FiliereName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FiliereRoot")
                        .HasColumnType("text");

                    b.Property<string>("Majorant")
                        .HasColumnType("text");

                    b.Property<string>("MaxModuleRated")
                        .HasColumnType("text");

                    b.Property<double?>("MaxMoyenne")
                        .HasColumnType("double precision");

                    b.Property<double?>("MedianRating")
                        .HasColumnType("double precision");

                    b.Property<string>("ModuleMaxPass")
                        .HasColumnType("text");

                    b.Property<string>("ModuleMinPass")
                        .HasColumnType("text");

                    b.Property<int?>("NbrEtds")
                        .HasColumnType("integer");

                    b.Property<double?>("NegativeFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double?>("NpsScore")
                        .HasColumnType("double precision");

                    b.Property<double?>("PassRate")
                        .HasColumnType("double precision");

                    b.Property<double?>("PositiveFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<byte[]>("RapportPdf")
                        .HasColumnType("bytea");

                    b.Property<double?>("SatisfactionRate")
                        .HasColumnType("double precision");

                    b.Property<double?>("StdDevRating")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("StatistiquesFilieres");
                });

            modelBuilder.Entity("AnalyticsService.Models.StatistiqueModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageNotes")
                        .HasColumnType("double precision");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("MedianNotes")
                        .HasColumnType("double precision");

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.Property<double?>("NegativeFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<double?>("NoteMax")
                        .HasColumnType("double precision");

                    b.Property<double?>("NoteMin")
                        .HasColumnType("double precision");

                    b.Property<double?>("NpsScore")
                        .HasColumnType("double precision");

                    b.Property<double?>("ParticipationRate")
                        .HasColumnType("double precision");

                    b.Property<double?>("PassRate")
                        .HasColumnType("double precision");

                    b.Property<double?>("PositiveFeedbackPct")
                        .HasColumnType("double precision");

                    b.Property<string>("Rapport")
                        .HasColumnType("text");

                    b.Property<byte[]>("RapportPdf")
                        .HasColumnType("bytea");

                    b.Property<double?>("SatisfactionRate")
                        .HasColumnType("double precision");

                    b.Property<double?>("StdevNotes")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("StatistiquesModules");
                });
#pragma warning restore 612, 618
        }
    }
}
